<!DOCTYPE html>
<html>
  <head>
    <title>Web Terminal</title>
    <link rel="stylesheet" href="/css/reset.css" />
    <link rel="stylesheet" href="/css/terminal.css" />
  </head>
  <body>
    <div class="terminal" id="terminal"></div>

    <form id="cmdForm">
      <span class="prompt">$</span>
      <input type="text" id="cmdInput" autocomplete="off" autofocus />
    </form>

    <script>
      const form = document.getElementById("cmdForm");
      const input = document.getElementById("cmdInput");
      const terminal = document.getElementById("terminal");
      const usedfunctions = [];
      let tellergobackhistory = usedfunctions.length - 1;
      document.addEventListener("keydown", function (event) {
        if (event.key === "ArrowUp") {
          if (historyIndex > 0) {
            historyIndex--;
            input.value = usedfunctions[historyIndex];
          }
          event.preventDefault(); // Optional: prevents cursor from moving to start
        } else if (event.key === "ArrowDown") {
          if (historyIndex < usedfunctions.length - 1) {
            historyIndex++;
            input.value = usedfunctions[historyIndex];
          } else {
            // If at the end of history, clear input
            historyIndex = usedfunctions.length;
            input.value = "";
          }
          event.preventDefault();
        }
      });
      form.addEventListener("submit", async (e) => {
        e.preventDefault();
        const command = input.value.trim();
        if (command !== "") {
          usedfunctions.push(command);
          historyIndex = usedfunctions.length; // Reset history index to latest
        }
        input.value = "";
        switch (command) {
          case "clear":
            location.reload();
            break;
          case "exit":
            window.location.pathname = "/";
            break;
          default:
            break;
        }
        const res = await fetch("/command", {
          method: "POST",
          headers: { "Content-Type": "application/x-www-form-urlencoded" },
          body: new URLSearchParams({ command }),
        });

        const html = await res.text();
        terminal.insertAdjacentHTML("beforeend", html);
        terminal.scrollTop = terminal.scrollHeight;
      });
      document.body.addEventListener("click", (e) => {
        const isInput = e.target === input;
        if (!isInput) input.focus();
      });

      // Auto-focus on load
      window.addEventListener("load", () => input.focus());
    </script>
  </body>
</html>
